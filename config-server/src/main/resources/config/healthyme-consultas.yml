server:
  port: 8089
  shutdown: graceful

spring:
  jackson:
    default-property-inclusion: non_null
    property-naming-strategy: SNAKE_CASE
    time-zone: America/Lima

  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:healthyme_consultas}?createDatabaseIfNotExist=true
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    show-sql: false

# Thread Pool para tareas asincrónicas (opcional)
task:
  execution:
    pool:
      core-size: 5
      max-size: 10
      queue-capacity: 25
    thread-name-prefix: consultas-task-

# Configuración de Circuit Breaker con Resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
    instances:
      recetaService:
        baseConfig: default
      pacienteService:
        baseConfig: default
      medicoService:
        baseConfig: default

  timelimiter:
    instances:
      recetaService:
        timeoutDuration: 5s
      pacienteService:
        timeoutDuration: 5s
      medicoService:
        timeoutDuration: 5s

  retry:
    instances:
      recetaRetry:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# Endpoints de monitoreo
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers
  endpoint:
    health:
      show-details: when_authorized
  health:
    circuitbreakers:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}