spring:
  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME:healthyme_notification_prod}
    username: ${DB_USER_PROD}
    password: ${DB_PASSWORD_PROD}
    hikari:
      maximum-pool-size: 15
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none

  mail:
    host: ${MAIL_HOST_PROD:smtp.gmail.com}
    port: ${MAIL_PORT_PROD:587}
    username: ${MAIL_USERNAME_PROD}
    password: ${MAIL_PASSWORD_PROD}

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-prod-1:9092,kafka-prod-2:9092,kafka-prod-3:9092}
    consumer:
      group-id: notification-service-prod
      auto-offset-reset: latest

logging:
  level:
    root: WARN
    studio.devbyjose: INFO
    org.springframework: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/healthyme/notification.log
    max-size: 10MB
    max-history: 7

resilience4j:
  circuitbreaker:
    instances:
      emailService:
        failureRateThreshold: 40  # Más estricto
        waitDurationInOpenState: 30s  # Mayor tiempo para estabilizarse
        slidingWindowSize: 20  # Ventana más amplia para detectar patrones
      storageService:
        failureRateThreshold: 30
        waitDurationInOpenState: 60s

  timelimiter:
    instances:
      emailService:
        timeoutDuration: 15s  # Mayor tiempo de espera