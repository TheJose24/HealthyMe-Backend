server:
  port: 8086
  shutdown: graceful

spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:healthyme_notification}?createDatabaseIfNotExist=true
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    show-sql: false

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

  # CircuitBreaker coherente con los grupos de hilos
  task:
    execution:
      pool:
        core-size: 5
        max-size: 10
        queue-capacity: 25
      thread-name-prefix: notif-task-

# Configuraci√≥n de Circuit Breaker
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
    instances:
      emailService:
        baseConfig: default
      medicoService:
        baseConfig: default
      pacienteService:
        baseConfig: default
      recetaService:
        baseConfig: default
      pdfGenerationService:
        baseConfig: default
        slidingWindowSize: 8
        failureRateThreshold: 40
        waitDurationInOpenState: 8s
      storageService:
        baseConfig: default
        waitDurationInOpenState: 10s
  timelimiter:
    instances:
      emailService:
        timeoutDuration: 10s
      medicoService:
        timeoutDuration: 5s
      pacienteService:
        timeoutDuration: 5s
      recetaService:
        timeoutDuration: 5s
      pdfGenerationService:
        timeoutDuration: 10s
      storageService:
        timeoutDuration: 8s
  retry:
    instances:
      eventosRetry:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# metricas y monitoreo
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true